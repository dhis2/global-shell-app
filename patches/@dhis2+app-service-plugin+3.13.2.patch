diff --git a/node_modules/@dhis2/app-service-plugin/build/cjs/Plugin.js b/node_modules/@dhis2/app-service-plugin/build/cjs/Plugin.js
index 49f6732..21a8e23 100644
--- a/node_modules/@dhis2/app-service-plugin/build/cjs/Plugin.js
+++ b/node_modules/@dhis2/app-service-plugin/build/cjs/Plugin.js
@@ -36,6 +36,7 @@ const Plugin = _ref3 => {
   let {
     pluginSource,
     pluginShortName,
+    onLoad,
     height,
     width,
     className,
@@ -121,6 +122,7 @@ const Plugin = _ref3 => {
       {
         window: iframeRef.current.contentWindow
       }, () => {
+        console.log('sending updated props');
         communicationReceivedRef.current = true;
         return iframeProps;
       });
@@ -129,6 +131,7 @@ const Plugin = _ref3 => {
 
     // If iframe has sent initial request, send new props
     if (communicationReceivedRef.current && iframeRef.current.contentWindow && !inErrorState) {
+      console.log('sending updated props');
       _postRobot.default.send(iframeRef.current.contentWindow, 'updated', iframeProps).catch(err => {
         // log postRobot errors, but do not bubble them up
         console.error(err);
@@ -159,7 +162,8 @@ const Plugin = _ref3 => {
     height: height !== null && height !== void 0 ? height : resizedHeight,
     style: {
       border: 'none'
-    }
+    },
+    onLoad: onLoad
   });
 };
 exports.Plugin = Plugin;
\ No newline at end of file
diff --git a/node_modules/@dhis2/app-service-plugin/build/es/Plugin.js b/node_modules/@dhis2/app-service-plugin/build/es/Plugin.js
index 7adc7cf..7f10539 100644
--- a/node_modules/@dhis2/app-service-plugin/build/es/Plugin.js
+++ b/node_modules/@dhis2/app-service-plugin/build/es/Plugin.js
@@ -27,6 +27,7 @@ export const Plugin = _ref3 => {
   let {
     pluginSource,
     pluginShortName,
+    onLoad,
     height,
     width,
     className,
@@ -112,6 +113,7 @@ export const Plugin = _ref3 => {
       {
         window: iframeRef.current.contentWindow
       }, () => {
+        console.log('sending updated props');
         communicationReceivedRef.current = true;
         return iframeProps;
       });
@@ -120,6 +122,7 @@ export const Plugin = _ref3 => {
 
     // If iframe has sent initial request, send new props
     if (communicationReceivedRef.current && iframeRef.current.contentWindow && !inErrorState) {
+      console.log('sending updated props');
       postRobot.send(iframeRef.current.contentWindow, 'updated', iframeProps).catch(err => {
         // log postRobot errors, but do not bubble them up
         console.error(err);
@@ -150,6 +153,7 @@ export const Plugin = _ref3 => {
     height: height !== null && height !== void 0 ? height : resizedHeight,
     style: {
       border: 'none'
-    }
+    },
+    onLoad: onLoad
   });
 };
\ No newline at end of file
diff --git a/node_modules/@dhis2/app-service-plugin/build/types/Plugin.d.ts b/node_modules/@dhis2/app-service-plugin/build/types/Plugin.d.ts
index 23b9a60..75cbab3 100644
--- a/node_modules/@dhis2/app-service-plugin/build/types/Plugin.d.ts
+++ b/node_modules/@dhis2/app-service-plugin/build/types/Plugin.d.ts
@@ -1,4 +1,4 @@
-/// <reference types="react" />
+import { ReactEventHandler } from 'react';
 type PluginProps = {
     /** URL to provide to iframe `src` */
     pluginSource?: string;
@@ -41,6 +41,8 @@ type PluginProps = {
     clientWidth?: string | number;
     /** Props that will be sent to the plugin */
     propsToPassNonMemoized?: any;
+    /** Event callback that will be called during the iframe's Load event */
+    onLoad?: ReactEventHandler<HTMLIFrameElement>;
 };
-export declare const Plugin: ({ pluginSource, pluginShortName, height, width, className, clientWidth, ...propsToPassNonMemoized }: PluginProps) => JSX.Element;
+export declare const Plugin: ({ pluginSource, pluginShortName, onLoad, height, width, className, clientWidth, ...propsToPassNonMemoized }: PluginProps) => JSX.Element;
 export {};
